---
title: "SEGUID v2: Checksums for Linear, Circular, Single- and Double-Stranded Biological Sequences"
bibliography: references.bib
---

:::{style="color:red"}
_WARNING: This is work under construction! Please do **not** use this
in production until we've offically released SEGUID v2._
:::

The SEquence Globally Unique IDentifier (SEGUID) checksum
[@BabniggGiometti_2006] was introduced to provide a stable, unifying
key for the same sequence in different databases facilitating linking
protein sequences across databases.
SEGUID v2 (2024) extends the original SEGUID method to support also
double-stranded sequences (e.g. DNA) and circular sequences
(e.g. proteins and double-stranded DNA).

![](figures/cdseguid.png)


## Examples

::: {.panel-tabset}

### Python

```python
>>> from seguid import *

>>> ldseguid("ATATGCC", "GGCATAT")
'ldseguid=UnHLvKWgR_kAuUDz5D5zDYcYA7g'

>>> cdseguid("TATGCCA", "TGGCATA")
'cdseguid=UnHLvKWgR_kAuUDz5D5zDYcYA7g'
```

### R

```r
> library(seguid)

> ldseguid("ATATGCC", "GGCATAT")
[1] "ldseguid=UnHLvKWgR_kAuUDz5D5zDYcYA7g"

> cdseguid("TATGCCA", "TGGCATA")
[1] "cdseguid=UnHLvKWgR_kAuUDz5D5zDYcYA7g"
```


### CLI (Python)


```sh
$ echo -e "ATATGCC\nTATACGG" | python -m seguid --type=ldseguid
ldseguid=UnHLvKWgR_kAuUDz5D5zDYcYA7g

## Equivalent using Bash <<< syntax
$ python -m seguid --type=ldseguid <<< $'ATATGCC\nTATACGG'  # <1>
ldseguid=UnHLvKWgR_kAuUDz5D5zDYcYA7g

$ echo -e "TATGCCA\nATACGGT" | python -m seguid --type=cdseguid
cdseguid=UnHLvKWgR_kAuUDz5D5zDYcYA7g

## Equivalent using Bash <<< syntax
$ python -m seguid --type=cdseguid <<< $'TATGCCA\nATACGGT'  # <1>
cdseguid=UnHLvKWgR_kAuUDz5D5zDYcYA7g
```

1. The syntax `<<< $'ACGT\nTGCA'` is [Bash] syntax. The `<<<` part
means pass the following string as input. The part `$'ACGT\nTGCA'` is
how we can specify two string separated with a newline in Bash.


### CLI (R)

```sh
$ echo -e "ATATGCC\nTATACGG" | Rscript -e seguid::seguid --type=ldseguid
ldseguid=UnHLvKWgR_kAuUDz5D5zDYcYA7g

## Equivalent using Bash <<< syntax
$ Rscript -e seguid::seguid --type=ldseguid <<< $'ATATGCC\nTATACGG'  # <1>
ldseguid=UnHLvKWgR_kAuUDz5D5zDYcYA7g

$ echo -e "TATGCCA\nATACGGT" | Rscript -e seguid::seguid --type=cdseguid
cdseguid=UnHLvKWgR_kAuUDz5D5zDYcYA7g

## Equivalent using Bash <<< syntax
$ Rscript -e seguid::seguid --type=cdseguid <<< $'TATGCCA\nATACGGT'  # <1>
cdseguid=UnHLvKWgR_kAuUDz5D5zDYcYA7g
```

1. The syntax `<<< $'ACGT\nTGCA'` is [Bash] syntax. The `<<<` part
means pass the following string as input. The part `$'ACGT\nTGCA'` is
how we can specify two string separated with a newline in Bash.

:::



## Availability

Implementations of above SEGUID methods are currently available for
Python and R;

* [**seguid**](https://github.com/seguid/seguid-python/) (Python package)
* [**seguid**](https://seguid-r.seguid.org/) (R package)



[Bash]: https://en.wikipedia.org/wiki/Bash_(Unix_shell)
